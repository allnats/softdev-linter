[tool.ruff]
# Set maximum line length to 79
line-length = 79
indent-width = 4

[tool.ruff.lint]
preview = true
select = [
    "E4", "E7", "E9", "F",      # These are the defaults 
    "W",        # pycodestyle Warning (W505 is doc-line-too-long)
    "E501",     # pycodestyle line-too-long
    "D",        # pydocstyle
    "Q",        # Prefer double quotes
    "E262",     # No space after inline comment (preview)
    "E265",     # No space after block comment (preview)
    "E225",     # Missing whitespace around operator (preview)
    "E226",     # Missing whitespace around arithmetic operator (preview)
    "E227",     # Missing whitespace around bitwise or shift operator (preview)
    "E228",     # Missing whitespace around modulo operator (preview)
    "E231",     # Missing whitespace around modulo operator (preview)
    "PLR2044",  # Pyline empty-comment
    "N"         # pep8-naming
]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pycodestyle]
max-doc-length = 72

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = 72
